{
  "functionTests":  [
    {
      "testName": "Check arithmetic functions",
      "steps": [
        {
          "name": "visitURL"
        },
        {
          "name": "importFile",
          "file": "cypress/fixtures/arithmetic-functions.codap3"
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "abs"
        },
        {
          "name": "addFormula",
          "attributeName": "abs",
          "formula": "abs(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "abs",
          "values": [2,1,0,2,0.147,0.976,1.571,"Infinity","Infinity",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "ceil"
        },
        {
          "name": "addFormula",
          "attributeName": "ceil",
          "formula": "ceil(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "ceil",
          "values": [2,1,0,"−2",0,1,"−1","Infinity","-Infinity","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "exp"
        },
        {
          "name": "addFormula",
          "attributeName": "exp",
          "formula": "exp(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "exp",
          "values": [7.389,2.718,1,0.135,0.864,2.655,0.208,"Infinity",0,"",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "floor"
        },
        {
          "name": "addFormula",
          "attributeName": "floor",
          "formula": "floor(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "floor",
          "values": [2,1,0,"−2","−1",0,"−2","Infinity","-Infinity","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "frac"
        },
        {
          "name": "addFormula",
          "attributeName": "frac",
          "formula": "frac(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "frac",
          "values": [0,0,0,0,"−0.147",0.976,"−0.571","NaN","NaN","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "ln"
        },
        {
          "name": "addFormula",
          "attributeName": "ln",
          "formula": "ln(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "ln",
          "values": [0.693,0,"-Infinity","NaN","NaN","−0.024","NaN","Infinity","NaN","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "log"
        },
        {
          "name": "addFormula",
          "attributeName": "log",
          "formula": "log(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "log",
          "values": [0.301,0,"-Infinity","NaN","NaN","−0.01","NaN","Infinity","NaN","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "pow"
        },
        {
          "name": "addFormula",
          "attributeName": "pow",
          "formula": "pow(num, 2)"
        },
        {
          "name": "verifyValues",
          "attributeName": "pow",
          "values": [4,1,0,4,0.021,0.953,2.468,"Infinity","Infinity","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "round"
        },
        {
          "name": "addFormula",
          "attributeName": "round",
          "formula": "round(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "round",
          "values": [2,1,0,"−2",0,1,"−2","Infinity","-Infinity","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "sqrt"
        },
        {
          "name": "addFormula",
          "attributeName": "sqrt",
          "formula": "sqrt(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "sqrt",
          "values": [1.414,1,0,"NaN","NaN",0.988,"NaN","Infinity","NaN","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "trunc"
        },
        {
          "name": "addFormula",
          "attributeName": "trunc",
          "formula": "trunc(num)"
        },
        {
          "name": "verifyValues",
          "attributeName": "trunc",
          "values": [2,1,0,"−2",0,0,"−1","Infinity","-Infinity","",""]
        },
        {
          "name": "addNewAttribute"
        },
        {
          "name": "renameAttribute",
          "currentAttributeName": "newAttr",
          "newAttributeName": "combinations"
        },
        {
          "name": "addFormula",
          "attributeName": "combinations",
          "formula": "combinations(num,1)"
        },
        {
          "name": "verifyValues",
          "attributeName": "combinations",
          "values": [2,1,
            "❌ k must be less than or equal to n",
            "❌ Positive integer value expected in function combinations",
            "❌ Positive integer value expected in function combinations",
            "❌ Positive integer value expected in function combinations",
            "❌ Positive integer value expected in function combinations",
            "❌ Positive integer value expected in function combinations",
            "❌ Positive integer value expected in function combinations",
            "",""
          ]
        }
      ]
    }
  ]
}
